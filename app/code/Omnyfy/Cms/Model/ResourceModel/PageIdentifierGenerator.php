<?php

namespace Omnyfy\Cms\Model\ResourceModel;

/**
 * Page identifier generator
 */
class PageIdentifierGenerator {

    /**
     * @var \Omnyfy\Cms\Model\ArticleFactory
     */
    protected $_articleFactory;

    /**
     * @var \Omnyfy\Cms\Model\CategoryFactory
     */
    protected $_categoryFactory;

    /**
     * Construct
     *
     * @param \Omnyfy\Cms\Model\ArticleFactory $articleFactory
     * @param \Omnyfy\Cms\Model\CategoryFactory $categoryFactory
     */
    public function __construct(
    \Omnyfy\Cms\Model\ArticleFactory $articleFactory, \Omnyfy\Cms\Model\CategoryFactory $categoryFactory, \Omnyfy\Cms\Model\CountryFactory $countryFactory
    ) {
        $this->_articleFactory = $articleFactory;
        $this->_categoryFactory = $categoryFactory;
        $this->_countryFactory = $countryFactory;
    }

    public function generate(\Magento\Framework\Model\AbstractModel $object) {
        if ($object->getId() && $object instanceof \Omnyfy\Cms\Model\Category) {
			$categoryData = $this->_categoryFactory->create()->load($object->getId());
			if($categoryData->getIdentifier() == $object->getData('identifier')){
				return;
			}
        } 

        //$identifier = trim($object->getData('title'));
        $identifier = trim($object->getTitle());
        if (!$identifier) {
            return;
        }

        $from = [
            'Ã?', 'Ã€', 'Ã‚', 'Ã„', 'Ä‚', 'Ä€', 'Ãƒ', 'Ã…', 'Ä„', 'Ã†', 'Ä†', 'ÄŠ', 'Äˆ', 'ÄŒ', 'Ã‡', 'ÄŽ', 'Ä?', 'Ã?', 'Ã‰', 'Ãˆ', 'Ä–', 'ÃŠ', 'Ã‹', 'Äš', 'Ä’', 'Ä˜', 'Æ?', 'Ä ', 'Äœ', 'Äž', 'Ä¢', 'Ã¡', 'Ã ', 'Ã¢', 'Ã¤', 'Äƒ', 'Ä?', 'Ã£', 'Ã¥', 'Ä…', 'Ã¦', 'Ä‡', 'Ä‹', 'Ä‰', 'Ä?', 'Ã§', 'Ä?', 'Ä‘', 'Ã°', 'Ã©', 'Ã¨', 'Ä—', 'Ãª', 'Ã«', 'Ä›', 'Ä“', 'Ä™', 'É™', 'Ä¡', 'Ä?', 'ÄŸ', 'Ä£', 'Ä¤', 'Ä¦', 'I', 'Ã?', 'ÃŒ', 'Ä°', 'ÃŽ', 'Ã?', 'Äª', 'Ä®', 'Ä²', 'Ä´', 'Ä¶', 'Ä»', 'Å?', 'Åƒ', 'Å‡', 'Ã‘', 'Å…', 'Ã“', 'Ã’', 'Ã”', 'Ã–', 'Ã•', 'Å?', 'Ã˜', 'Æ ', 'Å’', 'Ä¥', 'Ä§', 'Ä±', 'Ã­', 'Ã¬', 'i', 'Ã®', 'Ã¯', 'Ä«', 'Ä¯', 'Ä³', 'Äµ', 'Ä·', 'Ä¼', 'Å‚', 'Å„', 'Åˆ', 'Ã±', 'Å†', 'Ã³', 'Ã²', 'Ã´', 'Ã¶', 'Ãµ', 'Å‘', 'Ã¸', 'Æ¡', 'Å“', 'Å”', 'Å˜', 'Åš', 'Åœ', 'Å ', 'Åž', 'Å¤', 'Å¢', 'Ãž', 'Ãš', 'Ã™', 'Ã›', 'Ãœ', 'Å¬', 'Åª', 'Å®', 'Å²', 'Å°', 'Æ¯', 'Å´', 'Ã?', 'Å¶', 'Å¸', 'Å¹', 'Å»', 'Å½', 'Å•', 'Å™', 'Å›', 'Å?', 'Å¡', 'ÅŸ', 'ÃŸ', 'Å¥', 'Å£', 'Ã¾', 'Ãº', 'Ã¹', 'Ã»', 'Ã¼', 'Å­', 'Å«', 'Å¯', 'Å³', 'Å±', 'Æ°', 'Åµ', 'Ã½', 'Å·', 'Ã¿', 'Åº', 'Å¼', 'Å¾',
            'Ð?', 'Ð‘', 'Ð’', 'Ð“', 'Ð”', 'Ð•', 'Ð?', 'Ð–', 'Ð—', 'Ð˜', 'Ð™', 'Ðš', 'Ð›', 'Ðœ', 'Ð?', 'Ðž', 'ÐŸ', 'Ð ', 'Ð¡', 'Ð¢', 'Ð£', 'Ð¤', 'Ð¥', 'Ð¦', 'Ð§', 'Ð¨', 'Ð©', 'Ðª', 'Ð«', 'Ð¬', 'Ð­', 'Ð®', 'Ð¯',
            'Ð°', 'Ð±', 'Ð²', 'Ð³', 'Ð´', 'Ðµ', 'Ñ‘', 'Ð¶', 'Ð·', 'Ð¸', 'Ð¹', 'Ðº', 'Ð»', 'Ð¼', 'Ð½', 'Ð¾', 'Ð¿', 'Ñ€', 'Ñ?', 'Ñ‚', 'Ñƒ', 'Ñ„', 'Ñ…', 'Ñ†', 'Ñ‡', 'Ñˆ', 'Ñ‰', 'ÑŠ', 'Ñ‹', 'ÑŒ', 'Ñ?', 'ÑŽ', 'Ñ?',
            'Ð†', 'Ñ–', 'Ð‡', 'Ñ—', 'Ð„', 'Ñ”',
            ' & ', '&',
        ];

        $to = [
            'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'AE', 'C', 'C', 'C', 'C', 'C', 'D', 'D', 'D', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'G', 'G', 'G', 'G', 'G', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'ae', 'c', 'c', 'c', 'c', 'c', 'd', 'd', 'd', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'g', 'g', 'g', 'g', 'g', 'H', 'H', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'IJ', 'J', 'K', 'L', 'L', 'N', 'N', 'N', 'N', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'CE', 'h', 'h', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'ij', 'j', 'k', 'l', 'l', 'n', 'n', 'n', 'n', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'R', 'R', 'S', 'S', 'S', 'S', 'T', 'T', 'T', 'U', 'U', 'U', 'U', 'U', 'U', 'U', 'U', 'U', 'U', 'W', 'Y', 'Y', 'Y', 'Z', 'Z', 'Z', 'r', 'r', 's', 's', 's', 's', 'B', 't', 't', 'b', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'w', 'y', 'y', 'y', 'z', 'z', 'z',
            'A', 'B', 'V', 'H', 'D', 'e', 'Io', 'Z', 'Z', 'Y', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'R', 'S', 'T', 'U', 'F', 'Ch', 'C', 'Ch', 'Sh', 'Shtch', '', 'Y', '', 'E', 'Iu', 'Ia',
            'a', 'b', 'v', 'h', 'd', 'e', 'io', 'z', 'z', 'y', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'f', 'ch', 'c', 'ch', 'sh', 'shtch', '', 'y', '', 'e', 'iu', 'ia',
            'I', 'i', 'Ji', 'ji', 'Je', 'je',
            '-and-', '-and-',
        ];

        $identifier = str_replace($from, $to, $identifier);
        $identifier = mb_strtolower($identifier);
        $identifier = preg_replace('/[^A-Za-z0-9-]+/', '-', $identifier);
        $identifier = preg_replace('/[--]+/', '-', $identifier);

        $identifier = trim($identifier, '-');

        $article = $this->_articleFactory->create();
        $category = $this->_categoryFactory->create();
        $country = $this->_countryFactory->create();

        $number = 1;
        while (true) {

            $finalIdentifier = $identifier . ($number > 1 ? '-' . $number : '');

            $articleId = $article->checkIdentifier($finalIdentifier, $object->getStoreId());
            $categoryId = $category->checkIdentifier($finalIdentifier, $object->getStoreId());
            $categoryFoundCount = $category->checkIdentifierCount($finalIdentifier, $object->getStoreId());
            $countryId = $country->checkIdentifier($finalIdentifier, $object->getStoreId());
            //$countryId = $country->getId();

            if (!$articleId && !$categoryId && !$countryId) {
                break;
            } else {
                if ($articleId && $articleId == $object->getId() && $object instanceof \Omnyfy\Cms\Model\Article
                ) {
                    break;
                }

                if ($categoryId && $categoryId == $object->getId() && $object instanceof \Omnyfy\Cms\Model\Category
                ) {
                    break;
                } else if ($categoryFoundCount) {
					$identifier = str_replace($from, $to, $identifier);
					$identifier = mb_strtolower($identifier);
					$identifier = preg_replace('/[^A-Za-z0-9-]+/', '-', $identifier);
					$identifier = preg_replace('/[--]+/', '-', $identifier);

					$identifier = trim($identifier, '-');
                    $finalIdentifier = $this->checkIdentifierExist($identifier, $object->getStoreId());
//					$finalIdentifier = $identifier.'-'.$categoryFoundCount; // india-3					
//					if(!$this->checkIdentifierExist($finalIdentifier, $object->getStoreId())){
//						$finalIdentifier = $identifier.'-'.$categoryFoundCount;
//					}
                    break;
                }
                if ($countryId && $countryId == $object->getId() && $object instanceof \Omnyfy\Cms\Model\Country
                ) {
                    break;
                }
            }

            $number++;
        }

        $object->setData('identifier', $finalIdentifier);
    }
    public function checkIdentifierExist($identifier, $storeIds) {
        $category = $this->_categoryFactory->create();
        $categoryCounter = $category->checkIdentifierCount($identifier, $storeIds);
        if ($categoryCounter > 1) {
			$lastVal = substr(strrchr($identifier, "-"), 1);
			if(is_int($lastVal)){
				$identifier = str_replace($lastVal,$categoryCounter,$identifier);
				/* exit;
				$identifier = $identifier . '-' . $categoryCounter; */
				$identifier = $this->checkIdentifierExist($identifier, $storeIds);
			} else{
				$identifier = $identifier . '-' . $categoryCounter; 
				$identifier = $this->checkIdentifierExist($identifier, $storeIds);
			}
        } 
        return $identifier;
    }

}
